{"version":3,"sources":["../../../source/javascript/elements/card/CardFront.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM;;;AACL,UADK,SACL,CAAY,KAAZ,EAAmB;wBADd,WACc;;qEADd,sBAEE,QADY;;AAElB,QAAK,KAAL,GAAa;AACZ,WAAQ,MAAM,MAAN;GADT,CAFkB;AAKlB,QAAK,kBAAL,GAA0B,MAAK,kBAAL,CAAwB,IAAxB,OAA1B,CALkB;AAMlB,QAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB,CANkB;;EAAnB;;cADK;;sCAUe;AACnB,QAAK,eAAL,GADmB;AAEnB,QAAK,kBAAL,GAFmB;;;;4CAKM,WAAW;AACpC,OAAI,KAAK,KAAL,CAAW,MAAX,KAAsB,UAAU,MAAV,EAAkB;AAC3C,SAAK,QAAL,CAAc;AACb,aAAQ,UAAU,MAAV;KADT,EAD2C;IAA5C;;;;iCAOc;AACd,QAAK,kBAAL,GADc;;;;uCAIM;AACpB,OAAI,OAAO,MAAP,KAAkB,WAAlB,EAA+B;AAClC,WADkC;IAAnC;;AAIA,OAAI,YAAY,SAAS,KAAK,SAAL,CAAe,YAAf,EAA6B,EAAtC,CAAZ,CALgB;;AAOpB,QAAK,QAAL,CAAc;AACb,YAAQ,SAAR;IADD,EAPoB;;AAWpB,QAAK,KAAL,CAAW,UAAX,CAAsB,SAAtB,EAXoB;;;;oCAcH;AACjB,OAAI,OAAO,MAAP,KAAkB,WAAlB,EAA+B;AAClC,WADkC;IAAnC;;AAIA,QAAK,UAAL,GAAkB;AACjB,cAAU,UAAV;AACA,YAAQ,KAAK,KAAL,CAAW,MAAX,IAAsB,SAAS,KAAK,SAAL,CAAe,YAAf,EAA6B,EAAtC,CAAtB;IAFT,CALiB;;AAUjB,OAAI,OAAO,KAAK,KAAL,CAAW,MAAX,KAAsB,QAA7B,EAAuC;AAC1C,SAAK,gBAAL,GAAwB,IAAxB,CAD0C;AAE1C,SAAK,UAAL,CAAgB,MAAhB,GAAyB,KAAK,KAAL,CAAW,MAAX,CAFiB;IAA3C,MAGO;AACN,SAAK,gBAAL,GAAwB,KAAxB,CADM;IAHP;;;;2BAQQ;;;AACR,OAAM,QAAQ,KAAK,KAAL,CADN;OAGP,WAKG,MALH,SAHO;OAIP,UAIG,MAJH,QAJO;OAKP,YAGG,MAHH,UALO;OAMP,WAEG,MAFH,SANO;;OAOJ,kCACA,yDARI;;AAUR,OAAM,YAAY,yBACjB,YADiB,EAEjB,UAFiB,EAGjB,SAHiB,CAAZ,CAVE;;AAgBR,UACC;;iBACK;AACJ,gBAAW,SAAX;AACA,eAAU,CAAC,CAAD;AACV,UAAK,aAAC,OAAD,EAAa;AACjB,aAAK,SAAL,GAAiB,OAAjB,CADiB;MAAb;AAGL,YAAO,EAAC,SAAS,UAAU,CAAV,GAAc,CAAd,EAAgB,SAAQ,OAAR,EAAjC;MAPD;IASE,WAAW,yDAAe,aAAY,QAAZ,EAAqB,UAAU,KAAK,YAAL,EAA9C,CAAX,GAAiF,IAAjF;IACA,QAVF;IADD,CAhBQ;;;;QA3DJ;EAAkB,gBAAM,SAAN;;AA0FvB;;AAED,UAAU,SAAV,GAAsB;AACrB,WAAU,iBAAU,IAAV;AACV,UAAS,iBAAU,IAAV;;AAET,SAAQ,iBAAU,MAAV;AACR,YAAW,iBAAU,MAAV;AACX,WAAU,iBAAU,SAAV,CAAoB,CAC7B,iBAAU,KAAV,EACA,iBAAU,MAAV,EACA,iBAAU,MAAV,CAHS,CAAV;;AAMA,aAAY,iBAAU,IAAV;CAZb;;kBAee","file":"CardFront.js","sourcesContent":["import React, {PropTypes} from 'react';\nimport KlassName from 'teapan/klassName';\nimport EventListener from '../../helper/EventListener';\n\nclass CardFront extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\theight: props.height\n\t\t};\n\t\tthis.handleHeightChange = this.handleHeightChange.bind(this);\n\t\tthis.handleResize = this.handleResize.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setPrivateProps();\n\t\tthis.handleHeightChange();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.height !== nextProps.height) {\n\t\t\tthis.setState({\n\t\t\t\theight: nextProps.height,\n\t\t\t});\n\t\t}\n\t}\n\n\thandleResize() {\n\t\tthis.handleHeightChange();\n\t}\n\n\thandleHeightChange() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newHeight = parseInt(this.cardfront.clientHeight, 10);\n\n\t\tthis.setState({\n\t\t\theight: newHeight,\n\t\t});\n\n\t\tthis.props.syncHeight(newHeight);\n\t}\n\n\tsetPrivateProps() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.frontStyle = {\n\t\t\tposition: 'relative',\n\t\t\theight: this.props.height ||  parseInt(this.cardfront.clientHeight, 10)\n\t\t};\n\n\t\tif (typeof this.props.height === 'number') {\n\t\t\tthis.fixedfrontHeight = true;\n\t\t\tthis.frontStyle.height = this.props.height;\n\t\t} else {\n\t\t\tthis.fixedfrontHeight = false;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\tconst {\n\t\t\tduplexed,\n\t\t\tflipped,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\t...others\n\t\t} = props;\n\n\t\tconst klassName = KlassName(\n\t\t\t'card-front',\n\t\t\t'clearfix',\n\t\t\tclassName\n\t\t);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...others}\n\t\t\t\tclassName={klassName}\n\t\t\t\ttabIndex={-1}\n\t\t\t\tref={(element) => {\n\t\t\t\t\tthis.cardfront = element;\n\t\t\t\t}}\n\t\t\t\tstyle={{opacity: flipped ? 0 : 1,display:'block'}}\n\t\t\t>\n\t\t\t\t{duplexed ? <EventListener elementName=\"window\" onResize={this.handleResize} /> : null}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nCardFront.propTypes = {\n\tduplexed: PropTypes.bool,\n\tflipped: PropTypes.bool,\n\n\theight: PropTypes.number,\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string\n\t]),\n\n\tsyncHeight: PropTypes.func\n};\n\nexport default CardFront;"]}