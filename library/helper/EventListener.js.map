{"version":3,"sources":["../../source/javascript/helper/EventListener.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;AAEA,SAAS,EAAT,CAAY,OAAZ,EAAqB,IAArB,EAA2B,QAA3B,EAAqC;AACnC,MAAI,QAAQ,gBAAR,EAA0B;AAC5B,YAAQ,gBAAR,CAAyB,IAAzB,EAA+B,QAA/B,EAD4B;GAA9B,MAEO;;AACL,YAAQ,WAAR,CAAoB,OAAO,IAAP,EAAa,YAAM;AACrC,eAAS,IAAT,CAAc,OAAd,EADqC;KAAN,CAAjC,CADK;GAFP;CADF;;AAUA,SAAS,GAAT,CAAa,OAAb,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACpC,MAAI,QAAQ,mBAAR,EAA6B;AAC/B,YAAQ,mBAAR,CAA4B,IAA5B,EAAkC,QAAlC,EAD+B;GAAjC,MAEO;;AACL,YAAQ,WAAR,CAAoB,OAAO,IAAP,EAAa,QAAjC,EADK;GAFP;CADF;;AAQA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,QAAjC,EAA2C;MAEvC,cAEE,MAFF,YAFuC;;MAGpC,iCACD,wBAJqC;;AAMzC,MAAM,UAAU,OAAO,WAAP,CAAV,CANmC;;AAQzC,OAAK,IAAM,eAAN,IAAyB,KAA9B,EAAqC;AACnC,QAAM,YAAY,gBAAgB,SAAhB,CAA0B,CAA1B,EAA6B,WAA7B,EAAZ,CAD6B;;AAGnC,aAAS,OAAT,EAAkB,SAAlB,EAA6B,MAAM,eAAN,CAA7B,EAHmC;GAArC;CARF;;IAeM;;;AACJ,WADI,aACJ,CAAY,KAAZ,EAAmB;0BADf,eACe;;kEADf,0BAEI,QADW;GAAnB;;eADI;;wCAKgB;AAClB,uBAAiB,KAAK,KAAL,EAAY,UAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAAkC;AAC7D,WAAG,OAAH,EAAY,SAAZ,EAAuB,QAAvB,EAD6D;OAAlC,CAA7B,CADkB;;;;2CAMG;AACrB,uBAAiB,KAAK,KAAL,EAAY,UAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAAkC;AAC7D,YAAI,OAAJ,EAAa,SAAb,EAAwB,QAAxB,EAD6D;OAAlC,CAA7B,CADqB;;;;6BAMd;AACP,aAAO,IAAP,CADO;;;;SAjBL;EAAsB,gBAAM,SAAN;;AAoB3B;;AAED,cAAc,SAAd,GAA0B;AACxB,eAAa,iBAAU,MAAV;CADf;;kBAIe","file":"EventListener.js","sourcesContent":["import React, {PropTypes} from 'react';\n\nfunction on(element, type, callback) {\n  if (element.addEventListener) {\n    element.addEventListener(type, callback);\n  } else { // IE8+ Support\n    element.attachEvent('on' + type, () => {\n      callback.call(element);\n    });\n  }\n};\n\nfunction off(element, type, callback) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, callback);\n  } else { // IE8+ Support\n    element.detachEvent('on' + type, callback);\n  }\n};\n\nfunction listenersForEach(props, callback) {\n  const {\n    elementName,\n    ...other,\n  } = props;\n\n  const element = window[elementName];\n\n  for (const eventIdentifier in other) {\n    const eventName = eventIdentifier.substring(2).toLowerCase();\n\n    callback(element, eventName, other[eventIdentifier]);\n  }\n};\n\nclass EventListener extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    listenersForEach(this.props, (element, eventName, callback) => {\n      on(element, eventName, callback);\n    });\n  }\n\n  componentWillUnmount() {\n    listenersForEach(this.props, (element, eventName, callback) => {\n      off(element, eventName, callback);\n    });\n  }\n\n  render() {\n    return null;\n  }\n};\n\nEventListener.propTypes = {\n  elementName: PropTypes.string,\n};\n\nexport default EventListener;"]}