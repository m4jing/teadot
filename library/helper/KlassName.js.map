{"version":3,"sources":["../../source/javascript/helper/KlassName.js"],"names":[],"mappings":";;;;;;;;;;;AAOA,CAAC,YAAY;AACZ,cADY;;AAGZ,KAAI,SAAS,GAAG,cAAH,CAHD;;AAKZ,UAAS,SAAT,GAAsB;AACrB,MAAI,UAAU,EAAV,CADiB;;AAGrB,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,UAAU,MAAV,EAAkB,GAAtC,EAA2C;AAC1C,OAAI,MAAM,UAAU,CAAV,CAAN,CADsC;AAE1C,OAAI,CAAC,GAAD,EAAM,SAAV;;AAEA,OAAI,iBAAiB,gDAAjB,CAJsC;;AAM1C,OAAI,YAAY,QAAZ,IAAwB,YAAY,QAAZ,EAAsB;AACjD,YAAQ,IAAR,CAAa,GAAb,EADiD;IAAlD,MAEO,IAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AAC9B,YAAQ,IAAR,CAAa,UAAU,KAAV,CAAgB,IAAhB,EAAsB,GAAtB,CAAb,EAD8B;IAAxB,MAEA,IAAI,YAAY,QAAZ,EAAsB;AAChC,SAAK,IAAI,GAAJ,IAAW,GAAhB,EAAqB;AACpB,SAAI,OAAO,IAAP,CAAY,GAAZ,EAAiB,GAAjB,KAAyB,IAAI,GAAJ,CAAzB,EAAmC;AACtC,cAAQ,IAAR,CAAa,GAAb,EADsC;MAAvC;KADD;IADM;GAVR;;AAmBA,SAAO,QAAQ,IAAR,CAAa,GAAb,CAAP,CAtBqB;EAAtB;;AAyBA,KAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,OAAP,EAAgB;AACpD,SAAO,OAAP,GAAiB,SAAjB,CADoD;EAArD,MAEO,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,QAAO,OAAO,GAAP,CAAP,KAAsB,QAAtB,IAAkC,OAAO,GAAP,EAAY;AACxF,SAAO,WAAP,EAAoB,EAApB,EAAwB,YAAY;AACnC,UAAO,SAAP,CADmC;GAAZ,CAAxB,CADwF;EAAlF,MAIA;AACN,SAAO,SAAP,GAAmB,SAAnB,CADM;EAJA;CAhCP,GAAD","file":"KlassName.js","sourcesContent":["/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction klassName () {\n\t\tvar klasses = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tklasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tklasses.push(klassName.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tklasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn klasses.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = klassName;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine('klassName', [], function () {\n\t\t\treturn klassName;\n\t\t});\n\t} else {\n\t\twindow.klassName = klassName;\n\t}\n}());"]}