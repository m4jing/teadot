{"version":3,"sources":["../../source/javascript/helper/ResizeDetector.js"],"names":[],"mappings":"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","file":"ResizeDetector.js","sourcesContent":["import React, {PropTypes} from 'react';\n\nconst noop = (event) => event;\n\nconst parentStyle = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  overflow: 'scroll',\n  zIndex: -1,\n  visibility: 'hidden',\n};\n\nconst shrinkChildStyle = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  width: '200%',\n  height: '200%',\n};\n\nconst expandChildStyle = {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n};\n\nclass ResizeDetector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandChildHeight: 0,\n      expandChildWidth: 0,\n      expandScrollLeft: 0,\n      expandScrollTop: 0,\n      shrinkScrollTop: 0,\n      shrinkScrollLeft: 0,\n      lastWidth: 0,\n      lastHeight: 0,\n    };\n    this.reset = this.reset.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props !== nextProps;\n  }\n\n  componentDidUpdate() {\n    this.expand.scrollLeft = this.expand.scrollWidth;\n    this.expand.scrollTop = this.expand.scrollHeight;\n\n    this.shrink.scrollLeft = this.shrink.scrollWidth;\n    this.shrink.scrollTop = this.shrink.scrollHeight;\n  }\n\n  reset() {\n    const parent = this.container.parentElement;\n\n    let position = 'static';\n    if (parent.currentStyle) {\n      position = parent.currentStyle.position;\n    } else if (window.getComputedStyle) {\n      position = window.getComputedStyle(parent).position;\n    }\n    if (position === 'static') {\n      parent.style.position = 'relative';\n    }\n\n    this.setState({\n      expandChildHeight: this.expand.offsetHeight + 10,\n      expandChildWidth: this.expand.offsetWidth + 10,\n      lastWidth: this.props.handleWidth && this.container.parentElement.offsetWidth,\n      lastHeight: this.props.handleHeight && this.container.parentElement.offsetHeight,\n    });\n  }\n\n  handleScroll() {\n    const { state, props } = this;\n\n    if ((props.handleWidth && this.container.parentElement.offsetWidth !== state.lastWidth) || (props.handleHeight && this.container.parentElement.offsetHeight !== state.lastHeight)) {\n      this.props.onResize();\n    }\n\n    this.reset();\n  }\n\n  render() {\n    const { state } = this;\n    const expandStyle = Object.assign({}, expandChildStyle, {\n      width: state.expandChildWidth,\n      height: state.expandChildHeight,\n    });\n\n    return (\n      <div style={parentStyle} ref={(event) => {\n          this.container = event;\n        }}\n      >\n        <div style={parentStyle} onScroll={this.handleScroll} ref={(event) => {\n          this.expand = event;\n          }}\n        >\n          <div style={expandStyle} />\n        </div>\n        <div style={parentStyle} onScroll={this.handleScroll} ref={(event) => {\n          this.shrink = event;\n          }}\n        >\n          <div style={shrinkChildStyle} />\n        </div>\n      </div>\n    );\n  }\n};\n\nResizeDetector.propTypes = {\n  handleWidth: PropTypes.bool,\n  handleHeight: PropTypes.bool,\n\n  onResize: PropTypes.func,\n};\n\nResizeDetector.defaultProps = {\n  handleWidth: false,\n  handleHeight: false,\n  onResize: noop\n};\n\nexport default ResizeDetector;"]}